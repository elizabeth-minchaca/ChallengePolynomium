// <auto-generated />
using ChallengePolynomius.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChallengePolynomius.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250219203208_MigrationPostgreInitial")]
    partial class MigrationPostgreInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChallengePolynomius.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "J.R.R. Tolkien"
                        },
                        new
                        {
                            Id = 3,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Isaac Asimov"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Agatha Christie"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Stephen King"
                        });
                });

            modelBuilder.Entity("ChallengePolynomius.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Title = "Harry Potter y la Piedra Filosofal"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CategoryId = 1,
                            Title = "Harry Potter y la Cámara Secreta"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CategoryId = 1,
                            Title = "Harry Potter y el Prisionero de Azkaban"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CategoryId = 1,
                            Title = "El Señor de los Anillos: La Comunidad del Anillo"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            CategoryId = 1,
                            Title = "El Señor de los Anillos: Las Dos Torres"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CategoryId = 1,
                            Title = "El Señor de los Anillos: El Retorno del Rey"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CategoryId = 2,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            CategoryId = 2,
                            Title = "Rebelión en la Granja"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            CategoryId = 2,
                            Title = "Fundación"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            CategoryId = 2,
                            Title = "Yo, Robot"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            CategoryId = 5,
                            Title = "Asesinato en el Orient Express"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            CategoryId = 5,
                            Title = "Diez Negritos"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            CategoryId = 6,
                            Title = "It"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 6,
                            CategoryId = 6,
                            Title = "El Resplandor"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 6,
                            CategoryId = 6,
                            Title = "Cementerio de Animales"
                        });
                });

            modelBuilder.Entity("ChallengePolynomius.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantasía"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Novela Gráfica"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Suspenso"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Misterio"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Terror"
                        });
                });

            modelBuilder.Entity("ChallengePolynomius.Models.Book", b =>
                {
                    b.HasOne("ChallengePolynomius.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengePolynomius.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ChallengePolynomius.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ChallengePolynomius.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
